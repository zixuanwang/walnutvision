<?php

/**
 * BaseRenRenUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $sex
 * @property string $networkname
 * @property integer $friendscount
 * @property integer $birthyear
 * @property integer $birthmonth
 * @property integer $birthday
 * @property string $headurl
 * @property string $hometownprovince
 * @property string $hometowncity
 * @property integer $user_id
 * @property User $User
 * 
 * @method string     getName()             Returns the current record's "name" value
 * @method string     getSex()              Returns the current record's "sex" value
 * @method string     getNetworkname()      Returns the current record's "networkname" value
 * @method integer    getFriendscount()     Returns the current record's "friendscount" value
 * @method integer    getBirthyear()        Returns the current record's "birthyear" value
 * @method integer    getBirthmonth()       Returns the current record's "birthmonth" value
 * @method integer    getBirthday()         Returns the current record's "birthday" value
 * @method string     getHeadurl()          Returns the current record's "headurl" value
 * @method string     getHometownprovince() Returns the current record's "hometownprovince" value
 * @method string     getHometowncity()     Returns the current record's "hometowncity" value
 * @method integer    getUserId()           Returns the current record's "user_id" value
 * @method User       getUser()             Returns the current record's "User" value
 * @method RenRenUser setName()             Sets the current record's "name" value
 * @method RenRenUser setSex()              Sets the current record's "sex" value
 * @method RenRenUser setNetworkname()      Sets the current record's "networkname" value
 * @method RenRenUser setFriendscount()     Sets the current record's "friendscount" value
 * @method RenRenUser setBirthyear()        Sets the current record's "birthyear" value
 * @method RenRenUser setBirthmonth()       Sets the current record's "birthmonth" value
 * @method RenRenUser setBirthday()         Sets the current record's "birthday" value
 * @method RenRenUser setHeadurl()          Sets the current record's "headurl" value
 * @method RenRenUser setHometownprovince() Sets the current record's "hometownprovince" value
 * @method RenRenUser setHometowncity()     Sets the current record's "hometowncity" value
 * @method RenRenUser setUserId()           Sets the current record's "user_id" value
 * @method RenRenUser setUser()             Sets the current record's "User" value
 * 
 * @package    wepost
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRenRenUser extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ren_ren_user');
        $this->hasColumn('name', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('sex', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('networkname', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('friendscount', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('birthyear', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('birthmonth', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('birthday', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('headurl', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('hometownprovince', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('hometowncity', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}