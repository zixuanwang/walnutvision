<?php

/**
 * BaseSale
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $product_id
 * @property integer $store_id
 * @property float $salediscount
 * @property timestamp $salestarttime
 * @property timestamp $saleendtime
 * @property string $salecoupon
 * @property Product $Product
 * @property Store $Store
 * 
 * @method integer   getProductId()     Returns the current record's "product_id" value
 * @method integer   getStoreId()       Returns the current record's "store_id" value
 * @method float     getSalediscount()  Returns the current record's "salediscount" value
 * @method timestamp getSalestarttime() Returns the current record's "salestarttime" value
 * @method timestamp getSaleendtime()   Returns the current record's "saleendtime" value
 * @method string    getSalecoupon()    Returns the current record's "salecoupon" value
 * @method Product   getProduct()       Returns the current record's "Product" value
 * @method Store     getStore()         Returns the current record's "Store" value
 * @method Sale      setProductId()     Sets the current record's "product_id" value
 * @method Sale      setStoreId()       Sets the current record's "store_id" value
 * @method Sale      setSalediscount()  Sets the current record's "salediscount" value
 * @method Sale      setSalestarttime() Sets the current record's "salestarttime" value
 * @method Sale      setSaleendtime()   Sets the current record's "saleendtime" value
 * @method Sale      setSalecoupon()    Sets the current record's "salecoupon" value
 * @method Sale      setProduct()       Sets the current record's "Product" value
 * @method Sale      setStore()         Sets the current record's "Store" value
 * 
 * @package    wepost
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSale extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sale');
        $this->hasColumn('product_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('store_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('salediscount', 'float', null, array(
             'type' => 'float',
             'notnull' => true,
             ));
        $this->hasColumn('salestarttime', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('saleendtime', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => true,
             ));
        $this->hasColumn('salecoupon', 'string', null, array(
             'type' => 'string',
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Product', array(
             'local' => 'product_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Store', array(
             'local' => 'store_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}