<?php

/**
 * BaseFriendSimilarity
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id1
 * @property integer $id2
 * @property float $similarity
 * @property User $User1
 * @property User $User2
 * 
 * @method integer          getId1()        Returns the current record's "id1" value
 * @method integer          getId2()        Returns the current record's "id2" value
 * @method float            getSimilarity() Returns the current record's "similarity" value
 * @method User             getUser1()      Returns the current record's "User1" value
 * @method User             getUser2()      Returns the current record's "User2" value
 * @method FriendSimilarity setId1()        Sets the current record's "id1" value
 * @method FriendSimilarity setId2()        Sets the current record's "id2" value
 * @method FriendSimilarity setSimilarity() Sets the current record's "similarity" value
 * @method FriendSimilarity setUser1()      Sets the current record's "User1" value
 * @method FriendSimilarity setUser2()      Sets the current record's "User2" value
 * 
 * @package    wepost
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFriendSimilarity extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('friend_similarity');
        $this->hasColumn('id1', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('id2', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('similarity', 'float', null, array(
             'type' => 'float',
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User as User1', array(
             'local' => 'id1',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('User as User2', array(
             'local' => 'id2',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}