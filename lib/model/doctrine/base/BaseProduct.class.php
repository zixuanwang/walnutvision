<?php

/**
 * BaseProduct
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property integer $brand_id
 * @property string $size
 * @property string $barcode
 * @property string $qrcode
 * @property clob $description
 * @property float $overallrating
 * @property Brand $Brand
 * @property Doctrine_Collection $Color
 * @property Doctrine_Collection $Material
 * @property Doctrine_Collection $Category
 * @property Doctrine_Collection $UserRecommendation
 * @property Doctrine_Collection $UserUpload
 * @property Doctrine_Collection $Sales
 * @property Doctrine_Collection $ProductSimilarity
 * @property Doctrine_Collection $UserProductUploadLink
 * @property Doctrine_Collection $Images
 * @property Doctrine_Collection $Price
 * @property Doctrine_Collection $ProductColorLink
 * @property Doctrine_Collection $ProductMaterialLink
 * @property Doctrine_Collection $ProductCategoryLink
 * @property Doctrine_Collection $Comments
 * @property Doctrine_Collection $UserProductRecommendationLink
 * 
 * @method string              getName()                          Returns the current record's "name" value
 * @method integer             getBrandId()                       Returns the current record's "brand_id" value
 * @method string              getSize()                          Returns the current record's "size" value
 * @method string              getBarcode()                       Returns the current record's "barcode" value
 * @method string              getQrcode()                        Returns the current record's "qrcode" value
 * @method clob                getDescription()                   Returns the current record's "description" value
 * @method float               getOverallrating()                 Returns the current record's "overallrating" value
 * @method Brand               getBrand()                         Returns the current record's "Brand" value
 * @method Doctrine_Collection getColor()                         Returns the current record's "Color" collection
 * @method Doctrine_Collection getMaterial()                      Returns the current record's "Material" collection
 * @method Doctrine_Collection getCategory()                      Returns the current record's "Category" collection
 * @method Doctrine_Collection getUserRecommendation()            Returns the current record's "UserRecommendation" collection
 * @method Doctrine_Collection getUserUpload()                    Returns the current record's "UserUpload" collection
 * @method Doctrine_Collection getSales()                         Returns the current record's "Sales" collection
 * @method Doctrine_Collection getProductSimilarity()             Returns the current record's "ProductSimilarity" collection
 * @method Doctrine_Collection getUserProductUploadLink()         Returns the current record's "UserProductUploadLink" collection
 * @method Doctrine_Collection getImages()                        Returns the current record's "Images" collection
 * @method Doctrine_Collection getPrice()                         Returns the current record's "Price" collection
 * @method Doctrine_Collection getProductColorLink()              Returns the current record's "ProductColorLink" collection
 * @method Doctrine_Collection getProductMaterialLink()           Returns the current record's "ProductMaterialLink" collection
 * @method Doctrine_Collection getProductCategoryLink()           Returns the current record's "ProductCategoryLink" collection
 * @method Doctrine_Collection getComments()                      Returns the current record's "Comments" collection
 * @method Doctrine_Collection getUserProductRecommendationLink() Returns the current record's "UserProductRecommendationLink" collection
 * @method Product             setName()                          Sets the current record's "name" value
 * @method Product             setBrandId()                       Sets the current record's "brand_id" value
 * @method Product             setSize()                          Sets the current record's "size" value
 * @method Product             setBarcode()                       Sets the current record's "barcode" value
 * @method Product             setQrcode()                        Sets the current record's "qrcode" value
 * @method Product             setDescription()                   Sets the current record's "description" value
 * @method Product             setOverallrating()                 Sets the current record's "overallrating" value
 * @method Product             setBrand()                         Sets the current record's "Brand" value
 * @method Product             setColor()                         Sets the current record's "Color" collection
 * @method Product             setMaterial()                      Sets the current record's "Material" collection
 * @method Product             setCategory()                      Sets the current record's "Category" collection
 * @method Product             setUserRecommendation()            Sets the current record's "UserRecommendation" collection
 * @method Product             setUserUpload()                    Sets the current record's "UserUpload" collection
 * @method Product             setSales()                         Sets the current record's "Sales" collection
 * @method Product             setProductSimilarity()             Sets the current record's "ProductSimilarity" collection
 * @method Product             setUserProductUploadLink()         Sets the current record's "UserProductUploadLink" collection
 * @method Product             setImages()                        Sets the current record's "Images" collection
 * @method Product             setPrice()                         Sets the current record's "Price" collection
 * @method Product             setProductColorLink()              Sets the current record's "ProductColorLink" collection
 * @method Product             setProductMaterialLink()           Sets the current record's "ProductMaterialLink" collection
 * @method Product             setProductCategoryLink()           Sets the current record's "ProductCategoryLink" collection
 * @method Product             setComments()                      Sets the current record's "Comments" collection
 * @method Product             setUserProductRecommendationLink() Sets the current record's "UserProductRecommendationLink" collection
 * 
 * @package    wepost
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProduct extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product');
        $this->hasColumn('name', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));
        $this->hasColumn('brand_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('size', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('barcode', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('qrcode', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             ));
        $this->hasColumn('overallrating', 'float', null, array(
             'type' => 'float',
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Brand', array(
             'local' => 'brand_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('Color', array(
             'refClass' => 'ProductColorLink',
             'local' => 'product_id',
             'foreign' => 'color_id'));

        $this->hasMany('Material', array(
             'refClass' => 'ProductMaterialLink',
             'local' => 'product_id',
             'foreign' => 'material_id'));

        $this->hasMany('Category', array(
             'refClass' => 'ProductCategoryLink',
             'local' => 'product_id',
             'foreign' => 'category_id'));

        $this->hasMany('User as UserRecommendation', array(
             'refClass' => 'UserProductRecommendationLink',
             'local' => 'product_id',
             'foreign' => 'user_id'));

        $this->hasMany('User as UserUpload', array(
             'refClass' => 'UserProductUploadLink',
             'local' => 'product_id',
             'foreign' => 'user_id'));

        $this->hasMany('Sale as Sales', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('ProductSimilarity', array(
             'local' => 'id',
             'foreign' => 'id1'));

        $this->hasMany('UserProductUploadLink', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('Image as Images', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('Price', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('ProductColorLink', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('ProductMaterialLink', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('ProductCategoryLink', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('Comment as Comments', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $this->hasMany('UserProductRecommendationLink', array(
             'local' => 'id',
             'foreign' => 'product_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}